As the number of CPU cores has been increasing continuously, the implementation of a task system is required for modern rendering engines. My render engine uses my own task system, <a href="https://github.com/n-c0d3r/NTS">NTS ðŸ”—</a>, based on <a href="https://www.youtube.com/watch?v=HIVBhKj7gQU&t=584s">Parallelizing the Naughty Dog Engine Using Fibers ðŸ”—</a>.
In particular, I use multiple worker threads to populate command lists, which are then submitted to the GPU via command queues managed by render workers. Each render worker is a dedicated thread responsible for submitting command lists to the GPU, placing fences, and synchronizing between the CPU and GPU. This approach allows us to fully utilize multiple CPU cores, optimizing rendering techniques much more efficiently than the old rendering architecture.