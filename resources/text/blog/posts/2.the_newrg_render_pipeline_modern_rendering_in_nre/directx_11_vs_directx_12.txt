The differences between DirectX 11 and DirectX 12 are pretty much.
In work submission, DirectX 12 removes the concept of device context to support advanced work submission with explicit CPU-GPU synchronization and multiple command queues per device for multiple types of GPU work: graphics, compute, and copy. 
Additionally, synchronization among multiple drawcalls and dispatch calls is no longer automatically guaranteed by the DirectX driver anymore, allowing them to run concurrently. This change provides opportunities to optimize synchronization more effectively for specific rendering algorithms. However, it's also a double-edged sword in which it can be slower than the DirectX 11 implementation if not managed efficiently.
Next, resource management in DirectX 12 is more advanced and flexible than DirectX 11. This flexibility enables developers to have more control over memory allocation but harder to manage. For instance, thanks to the support of placed resources, we can create a placed resource everyframe on a pre-created heap at a very low cost. Nevertheless, we can't upload the initial subresource data directly as we did in DirectX 11.
Besides, there are more changes in DirectX 12 that I can't cover all of them here. For more details, I recommend visiting <a href="https://learn.microsoft.com/en-us/windows/win32/direct3d12/directx-12-programming-guide">DirectX 12 Programming Guide</a>.