Designing a render hardware interface is always challenging, especially when it need to support both simple and advanced graphics APIs. 
In NRHI 0.2, instead of changing the behavior of existed functionalities, I chose to add new functionalities for advanced graphics APIs. For example, I separated <span class="info-text-0">H_resource::create_committed</span>, which doesn't support initial resource data, from <span class="info-text-0">H_resource::create</span>, a function from the simple graphics API that does support initial resource data. Thus, all the uses of <span class="info-text-0">H_resource::create</span> in <a href="https://github.com/n-c0d3r/NRE">NRE ðŸ”—</a> will not be broken so that I can reuse them just by overloading <span class="info-text-0">H_resource::create</span> to use a custom resource uploader.
Using this approach, NRHI 0.2 comprises two smaller graphics APIs: the simple and the advanced one. Their availability by default depends on which graphics API we use. When using DirectX 11, the advanced API is not available. Conversely, when using DirectX 12, the advanced API is available but the simple API is not implemented by default. However, we can enable the simple API even with DirectX 12 through overloading all the simple API functionalities.
Moveover, I also added <span class="info-text-1">NSL</span> (NCoder's Shading Language) with support for HLSL 5.1 and more advanced features to be cross-platform and capable of fully using <span class="info-text-1">NSL</span> as the main shading language in NRE NewRG.