The <span class="info-text-3">C++</span> <span class="info-text-1">Standard Template Library</span> (<span class="info-text-2">STL</span>) provides a set of functions and classes to implement algorithms, containers, and the standard implementations of some common functionalities in <span class="info-text-3">C++</span> software development. 

Furthermore, the <span class="info-text-3">C++</span> <span class="info-text-2">STL</span> achieves its result through the use of template. This approach provides <span class="info-text-5">compile-time polymorphism</span> that is often more efficient than traditional <span class="info-text-6">run-time polymorphism</span>. Modern <span class="info-text-3">C++</span> compilers are tuned to minimize abstraction penalties arising from heavy use of the <span class="info-text-2">STL</span>.

In another programming languages, they usually have their own <span class="info-text-2">STL</span>-like feature but is different from <span class="info-text-3">C++</span> where there is not only one <span class="info-text-2">STL</span> in <span class="info-text-3">C++</span>. For particular, some high performance game engines use <span class="info-text-0">3rd party</span> <span class="info-text-2">STL</span> such as <span class="info-text-7">Folly</span> from <span class="info-text-9">Facebook</span> and <span class="info-text-8">EASTL</span> from <span class="info-text-6">Electronic Arts</span> or their own <span class="info-text-2">STL</span> implementing some specific containers, allocators and platform-specific functionalities to optimize high performance. 